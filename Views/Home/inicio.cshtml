@{
    ViewData["Title"] = "inicio";
}
<body>
    
    
    
    <div class="wrapper">
        <div class="container">
          <canvas id="wheel"></canvas>
          <button id="spin-btn">Spin</button>
        </div>
        <div id="final-value">
          <p>Click On The Spin To Start</p>
        </div>
      </div>
         <!-- Chart JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
    <!-- Chart JS Plugin for displaying text over chart -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/chartjs-plugin-datalabels/2.1.0/chartjs-plugin-datalabels.min.js"></script>
    
   <script>
        document.addEventListener("DOMContentLoaded", () => {
            const wheel = document.getElementById("wheel");
            const spinBtn = document.getElementById("spin-btn");
            const finalValue = document.getElementById("final-value");

            // Categorías del juego Preguntados
            const categories = ["Historia", "Geografía", "Ciencia", "Deportes", "Entretenimiento", "Arte"];
           
            // Crear los valores de rotación dinámicamente basados en las categorías
            const rotationValues = categories.map((category, index) => {
                const minDegree = index * (360 / categories.length);
                const maxDegree = (index + 1) * (360 / categories.length) - 1;
                return { minDegree, maxDegree, value: category };
            });

            // Tamaño de cada porción de la ruleta
            const data = new Array(categories.length).fill(100 / categories.length);

            // Colores para cada sector de la ruleta
            const pieColors = [
                "#ff6384",  // Historia - rojo
                "#36a2eb",  // Geografía - azul
                "#ffce56",  // Ciencia - amarillo
                "#4bc0c0",  // Deportes - verde
                "#9966ff",  // Entretenimiento - morado
                "#ff9f40",  // Arte - naranja
            ];

            // Crear el gráfico
            let myChart = new Chart(wheel, {
                plugins: [ChartDataLabels],
                type: "pie",
                data: {
                    labels: categories,  // Aquí se utilizan las categorías de Preguntados
                    datasets: [
                        {
                            backgroundColor: pieColors,
                            data: data,
                        },
                    ],
                },
                options: {
                    responsive: true,
                    animation: { duration: 0 },
                    rotation: 0, // Iniciar en 0 grados
                    plugins: {
                        tooltip: false,
                        legend: {
                            display: false,
                        },
                        datalabels: {
                            color: "#ffffff",
                            formatter: (_, context) => context.chart.data.labels[context.dataIndex],
                            font: { size: 16 },
                        },
                    },
                },
            });

            // Función para determinar el valor según el ángulo
            const valueGenerator = (angleValue) => {
                for (let i of rotationValues) {
                    if (angleValue >= i.minDegree && angleValue <= i.maxDegree) {
                        finalValue.innerHTML = `<p>¡Categoría: ${i.value}!</p>`;
                        spinBtn.disabled = false;

                        // Redirigir a la URL correspondiente
                        setTimeout(() => {
                            window.location.href = "/Home/Jugar";
                        }, 2000); // Espera 2 segundos antes de redirigir

                        break;
                    }
                }
            };

            let count = 0;
            let resultValue = 101;

            // Función para iniciar el giro de la ruleta
            spinBtn.addEventListener("click", () => {
                spinBtn.disabled = true;
                finalValue.innerHTML = `<p>¡Buena suerte!</p>`;
                let randomDegree = Math.floor(Math.random() * 360);
                let rotationInterval = window.setInterval(() => {
                    myChart.options.rotation += resultValue;
                    myChart.update();

                    if (myChart.options.rotation >= 360) {
                        count += 1;
                        resultValue -= 5;
                        myChart.options.rotation = 0;
                    } else if (count > 15 && myChart.options.rotation == randomDegree) {
                        valueGenerator(randomDegree);
                        clearInterval(rotationInterval);
                        count = 0;
                        resultValue = 101;
                    }
                }, 10);
            });
        });
    </script>
      
   
</body>